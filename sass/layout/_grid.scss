.hero {
    display: grid;
    grid-template-columns: 15% auto;
    grid-template-rows: 10% auto 20%;
    grid-template-areas: 
        "header header"
        "social text"
        "social box"
    ;

    @media only screen and (max-width: $media-small) {
        grid-template-columns: 10% auto;
        grid-template-rows: 10% auto 10%;
        grid-template-areas: 
            "header header"
            "social text"
            "social box"
        ;
    }

    @media only screen and (min-width: $media-small) and (max-width: $media-medium) {
        grid-template-columns: 10% auto;
        grid-template-rows: 15% auto 15%;
        grid-template-areas: 
            "header header"
            "social text"
            "social box"
        ;
    } 

    height: 100%;
    width: 100%;
    position: relative;
    
    & .header {
        grid-area: header;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 2.5rem 10rem;

        @media only screen and (max-width: $media-small) {
            grid-area: header;
            padding: 2.5rem;
        }

        @media only screen and (min-width: $media-small) and (max-width: $media-medium) {
            grid-area: header;
            padding: 2.5rem 3.5rem;
        } 
    }
    
    & .social {
        grid-area: social;
        display: flex;
        justify-content: flex-end;
        align-items: center;
        flex-direction: column;
        padding-bottom: 7.5rem;

        @media only screen and (max-width: $media-small) {
            grid-area: social;
            padding-bottom: 2rem;
        }

        @media only screen and (min-width: $media-small) and (max-width: $media-medium) {
            grid-area: social;
        } 

        &__items {
            & ul {
                & li {
                    &:not(:last-child) {
                        margin-bottom: 2.5rem;
                    }
                }
            }
        }
    }
    
    & .text {
        grid-area: text;
        display: flex;
        justify-content: center;
        align-items: flex-start;
        flex-direction: column;

        @media only screen and (max-width: $media-small) {
            grid-area: text;
        }

        @media only screen and (min-width: $media-small) and (max-width: $media-medium) {
            grid-area: text;
        } 
    }
    
    & .box {
        background-color: $color-primary;
        grid-area: box;
        z-index: 150;
        width: 50%;
        display: flex;
        justify-self: flex-end;
        justify-content: space-between;
        align-items: center;
        padding: 2.5rem 5rem;

        @media only screen and (max-width: $media-small) {
            grid-area: box;
            justify-self: flex-start;
            width: 100%;
            padding: 1.25rem 2.5rem;
        }

        @media only screen and (min-width: $media-small) and (max-width: $media-medium) {
            grid-area: box;
            width: 70%;
        } 

        &__item {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            flex-direction: column;
            opacity: 0;
            height: 100%;

            &:not(:last-child) {
                margin-right: 3rem;
            }
        }
    }
}

main {
    & .grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: auto 60rem 60rem 60rem 60rem auto;
        gap: 10rem;

        @media only screen and(max-width: $media-small){
            grid-template-columns: 1fr;
            grid-template-rows: auto 60rem 60rem 60rem 60rem auto;
            gap: 5rem;
            width: 90%;
            margin: 0 auto 5rem auto;
        }

        @media only screen and (min-width: $media-small) and (max-width: $media-medium) {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: auto 30rem 30rem 30rem 30rem auto;
            gap: 5rem;
            width: 100%;
            margin: 0 auto 5rem auto;
        }

        @media only screen and (min-width: $media-medium) and (max-width: $media-large) {
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: auto 40rem 40rem 40rem 40rem auto;
            gap: 5rem;
            width: 100%;
            margin: 0 auto 5rem auto;
        } 

        &__item {
            position: relative;
            width: 100%;
            height: 100%;
            overflow: hidden;

            & .overlay {
                position: absolute;
                top: 0%;
                left: 0%;
                height: 100%;
                width: 100%;
                background-color: $color-primary;
                z-index: 5;
            }

            &__box {
                position: absolute;
                bottom: 0%;
                left: 0%;
                padding: 2rem 2.5rem;
                background-color: $color-primary;
                width: 50%;
            }

            & img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: all .3s ease-in-out;
            }

            &:hover img {
                transform: scale(1.05);
            }

            &--1 {
                grid-column: 1 / 2;
                grid-row: 1 / 2;

                @media only screen and(max-width: $media-small) {
                    grid-column: 1 / 2;
                    grid-row: 1 / 2;
                }
            }

            &--2 {
                grid-column: 2 / 3;
                grid-row: 1 / span 2;

                @media only screen and(max-width: $media-small) {
                    grid-column: 1 / 2;
                    grid-row: 2 / 3;
                }
            }

            &--3 {
                grid-column: 1 / 2;
                grid-row: 2 / span 2;

                @media only screen and(max-width: $media-small) {
                    grid-column: 1 / 2;
                    grid-row: 3 / 4;
                }
            }

            &--4 {
                grid-column: 2 / 3;
                grid-row: 3 / span 2;

                @media only screen and(max-width: $media-small) {
                    grid-column: 1 / 2;
                    grid-row: 4 / 5;
                }
            }

            &--5 {
                grid-column: 1 / 2;
                grid-row: 4 / span 2;

                @media only screen and(max-width: $media-small) {
                    grid-column: 1 / 2;
                    grid-row: 5 / 6;
                }
            }

            &--6 {
                grid-column: 2 / 3;
                grid-row: 5 / span 2;

                @media only screen and(max-width: $media-small) {
                    grid-column: 1 / 2;
                    grid-row: 6 / 7;
                }
            }
        }
    }
}
